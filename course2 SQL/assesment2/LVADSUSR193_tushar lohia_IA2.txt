1.select machine_id from L1_maintenance_records 
where extract(year_month from maintenance_date) = '202403'
group by machine_id
having sum(cost) > (select avg(costing)FROM (select sum(cost) as costing
from L1_maintenance_records
where extract(year_month from maintenance_date) = '202403'group by extract(day from maintenance_date)) as costing);

2.select maintenance_type,count(maintenance_type) as c from L1_maintenance_records 
where extract(year_month from maintenance_date) = '202403'
group by maintenance_type
order by c desc
limit 1;

3.select technician_name, round(avg(cost),2) as avg_cost from L1_maintenance_records
where extract(year_month from maintenance_date) = '202403'
group by technician_name
order by avg_cost desc
limit 1;

4.select product_id, avg(incident_count_pre_update - incident_count_post_update) AS avg_reduction
from L2_updates
group by product_id;

5.

6.select product_id, min(incident_count_pre_update - incident_count_post_update) as reduction
from L2_updates
group by product_id
order by reduction
limit 1;

7.create view records as select p.patient_name, v.facility_id, f.facility_name, v.reason_for_visit, t.outcome
from l3_patients p join l3_visits v using(patient_id)
join l3_treatments t using(visit_id)
join l3_facilities f using(facility_id)
where extract(year_month from v.visit_date) = '202403';

8.select f.facility_id, f.facility_name, count(*) as emergency_visits_count
from l3_visits v join l3_facilities f using(facility_id)
where v.reason_for_visit = 'Emergency'
and extract(year_month from v.visit_date) = '202403'
group by f.facility_id, f.facility_name
order by emergency_visits_count desc
limit 1;

9.select  p.insurance_provider, count(*) as complicated_outcomes_count
from l3_patients p
join l3_visits v using(patient_id)
join l3_treatments t using(visit_id)
where t.outcome = 'Complicated'
AND extract(year_month from v.visit_date) in ( '202401','202402','202403','202404')
group by p.insurance_provider
order by complicated_outcomes_count desc
limit 1;

10.select p.product_name, p.category, sum(s.quantity) as total_quantity_sold
from L4_products p
join L4_sales s ON p.product_id = s.product_id
join L4_sales s2 ON s.product_id = s2.product_id
and s.sale_date = s2.sale_date
where s2.sale_date BETWEEN '2024-03-01' AND '2024-03-31'
group by p.product_id, p.product_name, p.category
having SUM(s.quantity) = (select MAX(total_quantity)
from(SELECT SUM(s3.quantity) as total_quantity from L4_sales s3
join L4_products p3 on s3.product_id = p3.product_id
where p3.category = p.category
and s3.sale_date BETWEEN '2024-03-01' AND '2024-03-31'
group by p3.product_id) as category_totals
);


11.create view sales_by_region_view as
select s.sale_id,s.product_id,s.store_id,s.sale_date,s.quantity,st.region
from L4_sales s
join L4_stores st on s.store_id = st.store_id;
select region, SUM(quantity) as total_sales
from sales_by_region_view
where extract(year_month from sale_date) = '202403'
group by region
order by total_sales desc
limit 1;

12.