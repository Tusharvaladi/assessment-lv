# -*- coding: utf-8 -*-
"""LVDASUSR_193.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1X4J0qcFCzpRzk0dgGVzPijJ_3VSJwFm6

Q1
"""

import numpy as np

arr = [1, 2, 3]

arr_sum = np.sum(arr)

arr_mean = np.mean(arr)

arr_std_dv = np.std(arr)

arr_min = min(arr)

arr_max = max(arr)

print(f"Mean:{arr_mean},  standered_dv:{arr_std_dv},  sum:{arr_sum} ,   Min:{arr_min},  Max:{arr_max}")

"""Q2   """

import numpy as np

health_data = np.array([[160, 70, 30],   # height, weight, age for individual 1
                        [165, 65, 35],   # height, weight, age for individual 2
                        [170, 75, 40]])  # height, weight, age for individual 3

def normalize(arr):
  mean = np.mean(arr, axis=0)
  std_dv = np.std(arr, axis=0)
  normalized_arr = (arr - mean) / std_dv

  return normalized_arr

normalized = normalize(health_data)
print(f"Normalized data: {normalized}")

"""Q3"""

import numpy as np
def average_(scores):

    avg_scores = np.zeros(3)
    for i in range(3):
        last_3 = scores[i, -3:]
        valid = last_3[last_3 != -1]
        avg_scores[i] = np.mean(valid)
    return avg_scores


avg= average_(scores)
print("Average score:")
print(avg)

"""Q4"""

arr_linspace = np.linspace(15, 25 ,24)
print(arr_linspace)

"""Q5"""

import pandas as pd

daily_closing_prices = np.array([100, 102, 98, 105, 107, 110, 108, 112, 115, 118, 120])
df = pd.DataFrame({'price': daily_closing_prices})

df['moving_avg'] = df['price'].rolling(window=5).mean()
print(df)

"""Q6"""



"""Q7"""

import numpy as np

mat = np.array([[21, 21, 32],[44, 52, 46],[76, 83, 94]])
determinant = np.linalg.det(mat)

print("Determinant of the matrix:")
print(determinant)

"""Q8"""

import numpy as np

arr = np.array([[1, 2, 3],[4, 5, 6],[7, 8, 9]])

array = arr[arr > 5]

print("number grater than 5):")
print(array)

"""Q9"""

import pandas as pd

data = {'Name': ['Alice', 'Bob', 'Charlie', 'David', 'Eve', 'Frank', 'Grace'],
        'Age': [25, 30, 35, 40, 45, 50, 55],
        'City': ['New York', 'Los Angeles', 'Chicago', 'Houston', 'Phoenix', 'Miami', 'Boston'],
        'Department': ['HR', 'IT', 'Finance', 'Marketing', 'Sales', 'IT', 'HR']}

df = pd.DataFrame(data)

age_df = df[(df['Age'] < 45)]
dept_df = age_df[(age_df['Department'] != 'HR')]

show = dept_df [['Name', 'City']]

print(show)

"""Q10"""

import pandas as pd

data = {'Department': ['Electronics', 'Electronics', 'Clothing', 'Clothing', 'Home Goods'],
        'Salesperson': ['Alice', 'Bob', 'Charlie', 'David', 'Eve'],
        'Sales': [70000, 50000, 30000, 40000, 60000]}

df = pd.DataFrame(data)
avg_sales_pp = df.groupby('Department')['Sales'].mean()
ranked_dept = avg_sales_pp.sort_values(ascending=False)

print("departments based on avg sales:")
print(ranked_dept)

"""Q11"""

import pandas as pd
data = {
    'Product': ['Apples', 'Bananas', 'Cherries', 'Dates', 'Elderberries', 'Flour', 'Grapes'],
    'Category': ['Fruit', 'Fruit', 'Fruit', 'Fruit', 'Fruit', 'Bakery', 'Fruit'],
    'Price': [1.20, 0.50, 3.00, 2.50, 4.00, 1.50, 2.00],
    'Promotion': [True, False, True, True, False, True, False]
}

df = pd.DataFrame(data)
fruit_df = df[df['Category'] == 'Fruit']
avg_price_fruit = fruit_df['Price'].mean()

filtered_products = fruit_df[(fruit_df['Price'] > avg_price_fruit) & (~fruit_df['Promotion'])]

print("desired products:")
print(filtered_products)

"""Q12"""

import pandas as pd

employee_data = {
    'Employee': ['Alice', 'Bob', 'Charlie', 'David'],
    'Department': ['HR', 'IT', 'Finance', 'IT'],
    'Manager': ['John', 'Rachel', 'Emily', 'Rachel']
}

project_data = {
    'Employee': ['Alice', 'Charlie', 'Eve'],
    'Project': ['P1', 'P3', 'P2']
}

emp_df = pd.DataFrame(employee_data)
proj_df = pd.DataFrame(project_data)

merged_df = pd.merge(emp_df, proj_df, on='Employee', how='right')
mapping = dict(zip(merged_df['Project'], merged_df['Department']))

print("proj to dept:")
print(mapping)

"""Q13"""

import pandas as pd

df = pd.read_csv('/content/Q13_sports_team_stats.csv')
df['win_ratio'] = df['Wins'] / df['GamesPlayed']

df['avg_score_per_game'] = df['Wins'] / df['GamesPlayed']

print("win ratios and average scores per game:")
print(df)

"""Q14"""



"""Q15"""

import pandas as pd

df = pd.read_csv('/content/Q15_student_grades.csv')
avg_grades_by_subject = df.groupby('Subject')['Grade'].mean()

print("Average grades by subject:")
print(avg_grades_by_subject)

print("History needs a bit improvement")